service: cripto-serverless
frameworkVersion: '3'

custom:
  UPDATE_TIMER: 20
  settings:
    TABLE_NAME: Tokens
    COINLAYER_KEY: e03001a37d6151bef1e1bb9190495e5e
    HISTORIC_LIMIT: 5

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  environment: ${self:custom.settings}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:Query
        - dynamodb:BatchWriteItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.TABLE_NAME}"


functions:
  hello:
    handler: lambdas/hello.handler
    events:
      - httpApi:
          path: /
          method: GET
  createToken:
    handler: lambdas/createToken.handler
    events:
      - httpApi:
          path: /tokens
          method: POST
  listToken:
    handler: lambdas/listToken.handler
    events:
      - httpApi:
          path: /tokens
          method: GET
  getToken:
    handler: lambdas/getToken.handler
    events:
      - httpApi:
          path: /tokens/{id}
          method: GET
  deleteToken:
    handler: lambdas/deleteToken.handler
    events:
      - httpApi:
          path: /tokens/{id}
          method: DELETE

resources:
  Resources:
    TokenTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.settings.TABLE_NAME}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
        - AttributeName: "tokenId"
          AttributeType: "S"
        - AttributeName: "timestamp"
          AttributeType: "N"
        KeySchema:
        - AttributeName: "tokenId"
          KeyType: "HASH"
        - AttributeName: "timestamp"
          KeyType: "RANGE"
